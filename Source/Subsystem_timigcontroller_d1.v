// -------------------------------------------------------------
// 
// File Name: max_opt\hdlsrc\FSRC\Subsystem_timigcontroller_d1.v
// Created: 2021-11-30 14:35:22
// 
// Generated by MATLAB 9.11 and HDL Coder 3.19
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Subsystem_timigcontroller_d1
// Source Path: Subsystem_timigcontroller_d1
// Hierarchy Level: 1
// 
// Master clock enable input: clk_enable
// 
// enable      : identical to clk_enable
// enable_r1_1_1_1: identical to clk_enable
// enable_r1_1_5_1: 5x slower than clk with phase 1
// enable_r1_1_13_1: 13x slower than clk with phase 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ps

module Subsystem_timigcontroller_d1
          (clk,
           clk_1_5,
           clk_1_13,
           reset_x,
           clk_enable,
           enable,
           enable_r1_1_1_1,
           enable_r1_1_5_1,
           enable_r1_1_13_1);


  input   clk;
  input   clk_1_5;
  input   clk_1_13;
  input   reset_x;
  input   clk_enable;
  output  enable;
  output  enable_r1_1_1_1;
  output  enable_r1_1_5_1;
  output  enable_r1_1_13_1;


  reg [2:0] count5;  // ufix3
  reg  phase_1;
  wire phase_1_tmp;
  reg [3:0] count13;  // ufix4
  reg  phase_1_1;
  wire phase_1_tmp_1;
  reg [6:0] count65;  // ufix7
  wire phase_all;
  wire reset_x_1_5_1;
  wire reset_x_1_13_1;
  wire enable_1_5_0_1;
  wire enable_1_13_0_1;


  always @ (posedge clk)
    begin: Counter5
      if (reset_x == 1'b1) begin
        count5 <= 3'b001;
      end
      else begin
        if (clk_enable == 1'b1) begin
          if (count5 >= 3'b100) begin
            count5 <= 3'b000;
          end
          else begin
            count5 <= count5 + 3'b001;
          end
        end
      end
    end // Counter5

  always @ ( posedge clk)
    begin: temp_process1
      if (reset_x == 1'b1) begin
        phase_1 <= 1'b1;
      end
      else begin
        if (clk_enable == 1'b1) begin
          phase_1 <= phase_1_tmp;
        end
      end
    end // temp_process1

  assign  phase_1_tmp = (count5 == 3'b000 && clk_enable == 1'b1) ? 1'b1 : 1'b0;

  always @ (posedge clk)
    begin: Counter13
      if (reset_x == 1'b1) begin
        count13 <= 4'b0001;
      end
      else begin
        if (clk_enable == 1'b1) begin
          if (count13 >= 4'b1100) begin
            count13 <= 4'b0000;
          end
          else begin
            count13 <= count13 + 4'b0001;
          end
        end
      end
    end // Counter13

  always @ ( posedge clk)
    begin: temp_process2
      if (reset_x == 1'b1) begin
        phase_1_1 <= 1'b1;
      end
      else begin
        if (clk_enable == 1'b1) begin
          phase_1_1 <= phase_1_tmp_1;
        end
      end
    end // temp_process2

  assign  phase_1_tmp_1 = (count13 == 4'b0000 && clk_enable == 1'b1) ? 1'b1 : 1'b0;


  assign phase_all = clk_enable ? 1'b1 : 1'b0;

  assign enable =  phase_all & clk_enable;

  assign enable_r1_1_1_1 =  phase_all & clk_enable;

  assign enable_r1_1_5_1 =  phase_1 & clk_enable;

  assign enable_r1_1_13_1 =  phase_1_1 & clk_enable;


endmodule  // Subsystem_timigcontroller_d1

